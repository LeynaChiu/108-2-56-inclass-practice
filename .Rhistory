grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample[[1]]
listExample[[2]]
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
length(tainanSportsMap)
tainanSportsMap[[1]]
tainanSportsMap[[1076]]
# 有多少名字可選：
names(listExample)
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
str(listExample)
listExample[["student"]]
listExample$student
listExample[["學期"]] # 小心不是反頓點喔。
listExample$`學期`
student<-"student"
listExample[[student]]
student<-"student"
listExample[[student]]
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
str(newTaipeiCityVaccine)
str(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
str(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[2]])
str(newTaipeiCityVaccine$result)
str(newTaipeiCityVaccine[["result"]])
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[2]],max.level = 2)
str(newTaipeiCityVaccine$result)
str(newTaipeiCityVaccine[["result "]])
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[2]],max.level = 1)
str(newTaipeiCityVaccine$result,max.level = 1)
str(newTaipeiCityVaccine[["result "]],max.level = 1)
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("學期")]
listExample[c("student","學期")]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2),max.level=1]
listExample[c(2,1),max.level=1]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2),max.level=1])
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)],max.level=1)
str(listExample[c(2,1)],max.level=1)
str(tainanSportsMap,max.level = 1)
str(tainanSportsMap,max.level = 1)
str(tainanSportsMap[c(1,382,1076)],max.level = 1)
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
str(taipeiNightMarkets[c(1,3)],max.level = 1)
str(taipeiNightMarkets[["寧夏觀光夜市"]],max.level = 1)
taipeiNightMarkets[c(1,3)]
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
str(taipeiNightMarkets, max.level = 1)
taipeiNightMarkets[c(1, 3, 8, 14)]
taipeiNightMarkets[c("景美夜市", "大龍街夜市", "士林觀光夜市")
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
str(taipeiNightMarkets, max.level = 1)
taipeiNightMarkets[c(1, 3, 8, 14)]
taipeiNightMarkets[c("景美夜市", "大龍街夜市", "士林觀光夜市")]
vectorExample
vectorExample[c(T,T,F)] # 要，要，不要
str(listExample[c(F,T)]) # 不要，要
str(listExample[c(T,T)]) # 要，要
str(listExample)
str(listExample[c(F,T)]) # 不要，要
str(listExample[c(T,T)]) # 要，要
str(listExample)
str(listExample[c(F,T)]) # 不要，要
str(listExample[c("學期")])
str(listExample[c(T,T)]) # 要，要
names(taipeiNightMarkets)
names(taipeiNightMarkets)
c(T,F,
F,F,
T,F,
F,F,
F,T,
F,F,
F,T,)->selectedMarkets
names(taipeiNightMarkets)
c(T,F,
F,F,
T,F,
F,F,
F,T,
F,F,
F,T,)->selectedMarkets
c(T,F,F,
F,T,F,
F,F,F,
T,F,F,
F,T,)->selectedMarkets
c(T,F,F,
F,T,F,
F,F,F,
T,F,F,
F,T)->selectedMarkets
taipeiNightMarkets[selectedMarkets]
str(taipeiNightMarkets[c(T,F,F,
F,T,F,
F,F,F,
T,F,F,
F,T)]
c(T,F,F,
F,T,F,
F,F,F,
T,F,F,
F,T)->selectedMarkets
taipeiNightMarkets[selectedMarkets]
str(taipeiNightMarkets[c(T,F,F,
F,T,F,
F,F,F,
T,F,F,
F,T)],max.level = 1
c(T,F,F,
F,T,F,
F,F,F,
T,F,F,
F,T)->selectedMarkets
str(taipeiNightMarkets[c(T,F,F,
F,T,F,
F,F,F,
T,F,F,
F,T)],max.level = 1
c(T,F,F,
F,T,F,
F,F,F,
T,F,F,
F,T)->selectedMarkets
str(taipeiNightMarkets[c(T,F,F,
F,T,F,
F,F,F,
T,F,F,
F,T)],max.level = 1
selectedMarkets<-REP(F,14)
selectedMarkets<-rep(F,14)
print(selectedMarkets)
selectedMarkets[c(1,5,8,14)]
selectedMarkets<-rep(F,14)#repeat
print(selectedMarkets)
selectedMarkets[c(1,5,8,14)]
selectedMarkets<-rep(F,14)#repeat
print(selectedMarkets)
selectedMarkets[c(1,5,8,14)]<-TRUE
selectedMarkets<-rep(F,14)#repeat
print(selectedMarkets)
selectedMarkets[c(1,5,8,14)]<-TRUE
print(selectedMarkets)
selectedMarkets<-rep(F,14)#repeat F by 14 times
print(selectedMarkets)
selectedMarkets[c(1,5,8,14)]<-TRUE
print(selectedMarkets)
str(taipeiNightMarkets[selectedMarkets],
max.level = 1)
knitr::opts_chunk$set(echo = TRUE)
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- c(T,T,F,F,T) ; econOnly
names[econOnly]
gender[econOnly]
econFemaleOnly <- c(T,T,F) ; econFemaleOnly
names[econOnly][econFemaleOnly]
knitr::opts_chunk$set(echo = TRUE)
source("https://www.dropbox.com/s/mk7bxvu6a3lxf79/studentEnvironmentReport.R?dl=1",print.eval = T)
source("https://www.dropbox.com/s/cqg0h2i5sfxsh1f/studentEnvironmentReport.R?dl=1",print.eval = T)
source("https://www.dropbox.com/s/cqg0h2i5sfxsh1f/studentEnvironmentReport.R?dl=1",print.eval = T)
source("https://www.dropbox.com/s/cqg0h2i5sfxsh1f/studentEnvironmentReport.R?dl=1",print.eval = T)
knitr::opts_chunk$set(echo = TRUE)
source("https://www.dropbox.com/s/cqg0h2i5sfxsh1f/studentEnvironmentReport.R?dl=1",print.eval = T)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages(c("lubridate"))
taiwan_time<-ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
oslo_time<-dmy_hms("18.11.2018 15:33:02",tz="Europe/Oslo")
two_times<-c(taiwan_time,oslo_time)
two_times
two_times_chicago<-two_times
two_times_chicago
two_times_chicago<-with_times_chicago,tzone=("America/Chicago")
two_times_chicago<-with_tz(two_times,tzone=("America/Chicago"))
two_times_chicago
two_times_chicago<-with_tz(two_times,tzone=("America/Chicago"))
two_times_chicago
course<-list(
approve=logi1<-c(TRUE),
course_info :list(
coursename="會計學"  ,
type="必",
credits=3,
time_place=list(
list(
weekday="星期三",
..  time_slots=c(7 8 9),
course<-list(
approve=logi1<-c(TRUE),
course_info :list(
coursename="會計學"  ,
type="必",
credits=3,
time_place=list(
list(
weekday ="星期三",
..  time_slots =c(7 8 9),
course<-list(
approve=logi1<-c(TRUE),
course_info :list(
coursename="會計學"  ,
type="必",
credits=3,
time_place=list(
list(
weekday ="星期三",
..   time_slots=c(7 8 9),
course<-list(
approve=logi1<-c(TRUE),
course_info :list(
coursename="會計學"  ,
type="必",
credits=3,
time_place=list(
list(
weekday ="星期三",
..  time_slots=c(7 8 9),
course<-list(
approve=logi1<-c(TRUE),
course_info =list(
coursename="會計學"  ,
type="必",
credits=3,
time_place=list(
list(
weekday ="星期三",
..  time_slots=c(7 8 9),
course<-list(
approve=logi1<-c(TRUE),
course_info =list(
coursename="會計學",
type="必",
credits=3,
time_place=list(
list(
weekday ="星期三",
..  time_slots=c(7 8 9),
course<-list(
approve=logi1<-c(TRUE),
course_info =list(
coursename="會計學",
type="必",
credits=3,
time_place=list(
list(
weekday ="星期三",
..  time_slots=c(7 8 9),
course<-list(
approve=logi1<-c(TRUE),
course_info =list(
coursename="會計學",
type="必",
credits=3,
time_place=list(
list(
weekday ="星期三",
time_slots=c(7,8,9),
classroom="商2F05"
)
)
)
)
str(course)
course
courseUpdate<-list(
`aprove`=logi1<-c(T),
`course_info` =list(
coursename="會計學"  ,
type="必",
credits=3,
time_place=list(
list(
weekday ="星期三",
time_slots=list(wed=c(7,8),tue=c(5)),
classroom="商2F05"
)
)
)
)
str(courseUpdate)
courseUpdate
accidents<-list(
time=ymd("2014-01-01"),
bureaus=list(
`板橋分局`=list(
type="駕駛人過失-其他",
casualties=1
),
`海山分局`=list(
type="駕駛人過失-搶越行人穿越道",
casualties=1
)
)
)
str(accidents)
accidents
levels_fiveReceipts<-levels(fiveReceipts)
levels_fiveReceipts<- levels(fiveReceipts)
source("https://www.dropbox.com/s/bvs0m4oxw7yaqxw/108-2-hw1-3.R?dl=1")
fiveReceipts <- .randomReceipts(n=5)
levels_fiveReceipts<- levels(fiveReceipts)
levels_fiveReceipts
storage_fiveReceipts<-as.integer(fiveReceipts)
storage_fiveReceipts
chr_fiveReceipts<-as.character(fiveReceipts)
chr_fiveReceipts
sum_fiveReceipts<-sum(sum_fiveReceipts)
sum_fiveReceipts=sum(sum_fiveReceipts)
sum_fiveReceipts<-sum(storage_fiveReceipts)
sum_fiveReceipts
# 啟動一個乾淨空的R環境
source("https://www.dropbox.com/s/xtge2ghfb7dhple/108-2-hw1-4.R?dl=1")
# 除了Global environment會清空，之前引入的套件也會被移除
yy <- 2020
mm <- "Mar."
dd <- 15
`event_list` <- list(
time=lubridate::ymd("yy,mm,dd"),
list(
name="小明",
`是否完成`=True,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
)
)
yy <- 2020
mm <- "Mar."
dd <- 15
`event_list` <- list(
time=lubridate::ymd("yy,mm,dd"),
list(
name="小明",
`是否完成`=c(True),
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
)
)
yy <- 2020
mm <- "Mar."
dd <- 15
`event_list` <- list(
time=lubridate::ymd("yy,mm,dd"),
list(
name="小明",
`是否完成`=c(TRUE),
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
)
)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages("readr")
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages("readr")
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages("readr")
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = TRUE)
source("https://www.dropbox.com/s/cqg0h2i5sfxsh1f/studentEnvironmentReport.R?dl=1",print.eval = T)
knitr::opts_chunk$set(echo = TRUE)
source("https://www.dropbox.com/s/mk7bxvu6a3lxf79/studentEnvironmentReport.R?dl=1",print.eval = T)
install.packages(c("readr"))
source("https://www.dropbox.com/s/mk7bxvu6a3lxf79/studentEnvironmentReport.R?dl=1",print.eval = T)
knitr::opts_chunk$set(echo = TRUE)
dialogue <- c('小明說："明天不用上課。"',
'小花說："真的嗎？"')
cat(dialogue, sep="\n")
install.packages("readr")
knitr::opts_chunk$set(echo = TRUE)
source("https://www.dropbox.com/s/cqg0h2i5sfxsh1f/studentEnvironmentReport.R?dl=1",print.eval = T)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = TRUE)
num <- c(1.5, 2, 3)
int <- c(1L, 3L, -2L)
char <- c("1.5","2","3")
logi <- c(T,T,F)
typeof(num)
typeof(int)
typeof(char)
typeof(logi)
class(num)
class(int)
class(char)
class(logi)
# 10位學生的主系
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
typeof(majors10_char)
class(majors10_char)
majors10_factor <- factor(majors10_char)
# 或
majors10_factor <- factor(
c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
)
typeof(majors10_factor)
class(majors10_factor)
as.integer(majors10_factor)
levels(majors10_factor)
stringInteger <- c("1","2","-11")
class(stringInteger) # 無法進行數值運算
stringInteger+2
as.integer(stringInteger)
class(stringInteger)
stringInteger <- as.integer(stringInteger)
class(stringInteger)
studentId <- c(410773002, 410773015)
studentId <- c(410773002, 410773015)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
pi <- c(3,1,4,1,5,9,2,6,5,3,5)
pi <- c(3,1,4,1,5,9,2,6,5,3,5)
knitr::opts_chunk$set(echo = TRUE)
studentId <- c(410773002, 410773015)
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
```{R}
studentId <- c(410773002, 410773015)
studentId <- c(410773002, 410773015)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
pi <- c(3,1,4,1,5,9,2,6,5,3,5)
knitr::opts_chunk$set(echo = TRUE)
vectorExample
vectorExample[c(1,3)]
vectorpi <- c(3,1,4,1,5,9,2,6,5,3,5)
vectorpi[c(6)]
gift
vectorpi <- c(3,1,4,1,5,9,2,6,5,3,5)
vectorpi[c(8)]
gift<-pi
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
vectorpi <- c(3,1,4,1,5,9,2,6,5,3,5)
vectorpi[c(8)]
vectorpi <- c(3,1,4,1,5,9,2,6,5,3,5)
gift<-pi[c(8)]
gift
